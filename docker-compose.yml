version: '3'

services:
  database-layer:
    image: postgres:12-alpine
    container_name: database-layer
    environment:
        - DB_POSTGRES=true
        - PGPORT=5432
        - POSTGRES_USER=${DB_USER}
        - POSTGRES_PASSWORD=${DB_PASSWORD}
        - POSTGRES_DB=${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    networks:
      - shared-network
    volumes:
      - database-volume:/var/lib/postgresql/data
    restart: on-failure

  node-app:
    build: /API
    image: node-app
    ports:
      - '${APP_PORT}:3000'
    environment:
      - NODE_CONFIG={"host":"${HOST}", "port":${APP_PORT}, "authentication":{ "oauth":{ "redirect":"http://${HOST}:${NGINX_PORT}/login?", "github":{"redirect_uri":"http://${HOST}:${NGINX_PORT}/api/oauth/github/callback","key":"${GITHUB_KEY}","secret":"${GITHUB_SECRET}"}, "google":{"redirect_uri":"http://${HOST}:${NGINX_PORT}/api/oauth/google/callback","key":"${GOOGLE_KEY}","secret":"${GOOGLE_SECRET}"}}},"postgresql":{"client":"pg","connection":"postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}"}}
    depends_on:
      - database-layer
    volumes:
      - .:/usr/src/node-app
    networks:
      - shared-network
    restart: on-failure
    command: yarn start -L

  react-app:
    build: /FE
    ports:
      - '8000:8000'
    depends_on:
      - node-app
    volumes:
      - .:/usr/src/react-app
    networks:
      - shared-network
    command: yarn start -L

  nginx:
    image: nginx:alpine
    ports:
      - '${NGINX_PORT}:80'
    depends_on:
      - node-app
    volumes:
      - "./API/public:/usr/src/node-app/public"
      - "./API/nginx/nginx.conf:/etc/nginx/conf.d/default.conf"
    networks:
      - shared-network

  admin:
    image: adminer
    restart: on-failure
    depends_on:
      - database-layer
    ports:
      - '${ADMIN_PORT}:8080'
    networks:
      - shared-network
#   Link:
#   http://0.0.0.0:8080/?pgsql=database-layer%3A2665&username=dbuser&db=dbname&ns=public

volumes:
  database-volume:

networks:
  shared-network:
